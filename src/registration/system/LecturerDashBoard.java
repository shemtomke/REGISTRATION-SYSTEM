/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package registration.system;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static registration.system.StudentHomeDashboard.unitsTable;

/**
 *
 * @author SHEM TOM
 */
public class LecturerDashBoard extends javax.swing.JFrame implements Observer{

    PreparedStatement ps = null;
    ResultSet rs = null;
    
    UserDetails userDetails = new UserDetails(UserDetails.username);
    
    String Grade;
    int totalValue, result = 0, cat, assignment, exams;
    
    /**
     * Creates new form LecturerDashBoard
     */
    public LecturerDashBoard() {
        initComponents();
        
        GetLecturerDetails();
        GetUnits();
        OnUnitChange();
        
        AddMarksBtn.setEnabled(false);
        //CalculateMarks();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        nameLbl = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        marksTable = new javax.swing.JTable();
        unitComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        regTxtShow = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        assignmentValue = new javax.swing.JTextField();
        catValue = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        examValue = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        inputReg = new javax.swing.JTextField();
        AddMarksBtn = new javax.swing.JButton();
        unitName = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        totalLbl = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        gradeTxt = new javax.swing.JLabel();
        calculateMarksBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        nameLbl.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        nameLbl.setForeground(new java.awt.Color(0, 0, 0));
        nameLbl.setText("Full Names");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("NAME");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("REG NO:");

        marksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "REG NUMBER", "ASSIGNMENT", "CAT", "EXAMS", "TOTAL", "GRADE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(marksTable);

        unitComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("UNIT");

        regTxtShow.setForeground(new java.awt.Color(0, 0, 0));
        regTxtShow.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("ASSIGNMENT");

        assignmentValue.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        assignmentValue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        assignmentValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                assignmentValueKeyTyped(evt);
            }
        });

        catValue.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        catValue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        catValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                catValueKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("CAT");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("EXAM");

        examValue.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        examValue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        examValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                examValueKeyTyped(evt);
            }
        });

        searchBtn.setText("SEARCH");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("REG NO:");

        AddMarksBtn.setText("ADD MARKS");
        AddMarksBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddMarksBtnActionPerformed(evt);
            }
        });

        unitName.setBackground(new java.awt.Color(255, 255, 255));
        unitName.setForeground(new java.awt.Color(0, 0, 0));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("TOTAL ");

        totalLbl.setBackground(new java.awt.Color(255, 255, 255));
        totalLbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        totalLbl.setForeground(new java.awt.Color(0, 0, 0));
        totalLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalLbl.setText("0");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setText("GRADE");

        gradeTxt.setBackground(new java.awt.Color(255, 255, 255));
        gradeTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        gradeTxt.setForeground(new java.awt.Color(0, 0, 0));
        gradeTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gradeTxt.setText("-");

        calculateMarksBtn.setText("CALCULATE");
        calculateMarksBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateMarksBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(unitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(unitName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane1))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(regTxtShow, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(inputReg)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchBtn)
                        .addGap(163, 163, 163)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AddMarksBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(assignmentValue, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(catValue)
                            .addComponent(examValue))
                        .addGap(14, 14, 14))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(totalLbl)
                        .addGap(48, 48, 48)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(gradeTxt)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(calculateMarksBtn)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(nameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(unitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(unitName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assignmentValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(catValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(examValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(regTxtShow, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalLbl)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gradeTxt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(calculateMarksBtn)
                    .addComponent(AddMarksBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );

        jMenu1.setText("=");

        jMenuItem5.setText("LOG OUT");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(771, 563));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    void PopulateUnits()
    {
        /*try {
            String unitTable = "SELECT UnitID, UnitName FROM unit "
                    + "WHERE SemID = (SELECT SemID FROM student WHERE RegNO = '" + userDetails.getUsername() + "')"
                    + "AND CourseID = (SELECT CourseID FROM student WHERE RegNO = '" + userDetails.getUsername() + "')";
            
            ps = ConnectionDatabase.DbConnection().prepareStatement(unitTable);
            rs = ps.executeQuery();
            
            DefaultTableModel tableModel = (DefaultTableModel) tableUnits.getModel();
            
            while(rs.next())
            {
                String unitCode = rs.getString("UnitID");
                String unitName = rs.getString("UnitName");
                
                tableModel.addRow(new Object[]{selectUnit, unitCode, unitName});
                System.out.println(unitCode);
            }
        } catch (Exception e) {
        }*/
    }
    void GetLecturerDetails()
    {
        String lecName = "SELECT * FROM employee WHERE employeeID = '" + userDetails.getUsername() + "'";
        
        try {
            ps = ConnectionDatabase.DbConnection().prepareStatement(lecName);
            
            rs = ps.executeQuery();
        
        while(rs.next())
        {
            nameLbl.setText(rs.getString("EmployeeName"));
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    void GetUnits()
    {
        String units = "SELECT UnitId from unitsassign WHERE EmployeeID = '" + userDetails.getUsername() + "'";
        
        try {
            ps = ConnectionDatabase.DbConnection().prepareStatement(units);
            
            rs = ps.executeQuery();
        
        while(rs.next())
        {
            unitComboBox.addItem(rs.getString("UnitID"));
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    void OnUnitChange()
    {
        String unitName = "SELECT unit.UnitName FROM unit "
                + "INNER JOIN unitsassign ON unit.UnitID = "
                + "'" + unitComboBox.getSelectedItem().toString() + "'";
        
        try
        {
            ps = ConnectionDatabase.DbConnection().prepareStatement(unitName);
            
            rs = ps.executeQuery();
            
            while (rs.next()) 
            {                
                this.unitName.setText(rs.getString("UnitName"));
            }
            
        } catch (Exception e) 
        {
        }
    }
    void CalculateMarks()
    {
        try {
            assignment = Integer.parseInt(assignmentValue.getText());
            cat = Integer.parseInt(catValue.getText());
            exams = Integer.parseInt(examValue.getText());

            totalValue = CalculateAverageCat(cat, assignment) + exams;
            totalLbl.setText(totalValue + "");

            if(totalValue > 69)
            {
                Grade = "A";
            }
            else if(totalValue> 59 && totalValue < 70)
            {
                Grade = "B";
            }
            else if(totalValue> 49 && totalValue < 60)
            {
                Grade = "C";
            }
            else if(totalValue> 39 && totalValue < 50)
            {
                Grade = "D";
            }
            else
            {
                Grade = "F";
            }
            
            gradeTxt.setText(Grade);
            
            //check if they are valid marks
            if((exams > 70 || exams < 0) || (assignment > 30 && assignment < 0) || (cat > 30 || cat < 0))
            {
                JOptionPane.showMessageDialog(null, "Exceeded Mark LIMIT!");
                
                assignmentValue.setText("");
                gradeTxt.setText("");
                catValue.setText("");
                assignmentValue.setText("");
                totalLbl.setText("");
                examValue.setText("");
                AddMarksBtn.setEnabled(false);
            }
            else
            {
                AddMarksBtn.setEnabled(true);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ENTER VALID MARKS!");
            
            assignmentValue.setText("");
            gradeTxt.setText("");
            catValue.setText("");
            assignmentValue.setText("");
            totalLbl.setText("");
            examValue.setText("");
        }
        
    }
    
    int CalculateAverageCat(int catMarks, int assignmentMarks)
    {
        int avg = ((catMarks + assignmentMarks) * 30 ) / 60;
        return avg;
    }
    void SearchStudent()
    {
        //check if the student is enrolled to that unit - doing the unit
        try {
            
        } catch (Exception e) {
        }
    }
    private void unitComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitComboBoxActionPerformed
        // TODO add your handling code here:
        //units relating to the lecture
        
    }//GEN-LAST:event_unitComboBoxActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        
        new EmployeeLogin().setVisible(true);
        
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        
        //search students doing that unit
        try {
            String studentReg = "SELECT * FROM student WHERE regNo = '"+ inputReg.getText() +"'";
            
            ps = ConnectionDatabase.DbConnection().prepareStatement(studentReg);
            
            rs = ps.executeQuery();
            
            if(rs.next()) 
            {                
                regTxtShow.setText(rs.getString("RegNO"));
                JOptionPane.showMessageDialog(null, "Student Found!");
                inputReg.setText("");
                
            }
            else
            {
                regTxtShow.setText("This student does not exist");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "This student does not exist");
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void catValueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_catValueKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c))
        {
            evt.consume();
        }
    }//GEN-LAST:event_catValueKeyTyped

    private void examValueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_examValueKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c))
        {
            evt.consume();
        }
    }//GEN-LAST:event_examValueKeyTyped

    private void assignmentValueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_assignmentValueKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        
        if(!Character.isDigit(c))
        {
            evt.consume();
        }
    }//GEN-LAST:event_assignmentValueKeyTyped

    private void AddMarksBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddMarksBtnActionPerformed
        // TODO add your handling code here:
        
        //check if all details are entered and 
        try {
            String marks = "INSERT INTO results "
                    + "(ResultsID, Assignment, Cat, Exam, RegNO, UnitID) "
                    + "VALUES (?, ?, ?, ?, ?, ?)";
            
            ps = ConnectionDatabase.DbConnection().prepareStatement(marks);
            
            ps.setInt(1, result++);
            ps.setInt(2, assignment);
            ps.setInt(3, cat);
            ps.setInt(4, exams);
            ps.setString(5, regTxtShow.getText().toString());
            ps.setString(6, unitComboBox.getSelectedItem().toString());
            
            
            ps.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "SUCCESSFUL!");
            
            DefaultTableModel tableModel = (DefaultTableModel) marksTable.getModel();
            
            tableModel.addRow(new Object[]{regTxtShow.getText().toString(), assignment, cat, exams, totalValue, Grade});
            
            assignmentValue.setText("");
            gradeTxt.setText("");
            catValue.setText("");
            assignmentValue.setText("");
            totalLbl.setText("");
            examValue.setText("");
            regTxtShow.setText("");
            AddMarksBtn.setEnabled(false);
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_AddMarksBtnActionPerformed

    private void calculateMarksBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateMarksBtnActionPerformed
        // TODO add your handling code here:
        
        CalculateMarks();
    }//GEN-LAST:event_calculateMarksBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LecturerDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LecturerDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LecturerDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LecturerDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LecturerDashBoard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddMarksBtn;
    private javax.swing.JTextField assignmentValue;
    private javax.swing.JButton calculateMarksBtn;
    private javax.swing.JTextField catValue;
    private javax.swing.JTextField examValue;
    private javax.swing.JLabel gradeTxt;
    private javax.swing.JTextField inputReg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable marksTable;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JLabel regTxtShow;
    private javax.swing.JButton searchBtn;
    private javax.swing.JLabel totalLbl;
    private javax.swing.JComboBox<String> unitComboBox;
    private javax.swing.JLabel unitName;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        
    }
}
